
#include<bits/stdc++.h>
using namespace std;

//BigMod
int pw(int a, int b,int M){
    int res = 1;
    while(b){
        if(b&1) res = (res*a)%M;
        a = (a*a) % M;
        b >>= 1;
    }
    return res;
}

//Multiplication with mod
int mul(int a, int b, int M){
    int res = 0;
    while(b){
        if(b&1){
            res = (res + a)%M;
        }
        a = (a+a)%M;
        b >>= 1;
    }
    return res;
}

//Two digit string multiplication
string mul(string a,string b,int base){

string ans=string(sz(a)+sz(b),'0');

for(int i=sz(a)-1;i>=0;i--){
    for(int j=sz(b)-1;j>=0;j--){
        int res=(ans[i+j+1]-'0')+(a[i]-'0')*(b[j]-'0');
        ans[i+j+1]=(res%base)+'0';
        ans[i+j]+=res/base;
    }
}
return ans;
}

//power series summation in log(n)

int s (int r, int n, int m) {
   if (n == 0) return 1;
   if (n == 1) return (1 + r) % m;
   int ans;
   if (n % 2 == 1) {
      ans = (1 + r) % m * s ( (r % m * r % m) % m, (n - 1) / 2, m);
   } else {
      ans = 1 + (r * (1 + r) % m * s ( (r * r) % m, (n / 2) - 1, m));
   }
   return (ans % m);
}


int main(){


return 0;
}
