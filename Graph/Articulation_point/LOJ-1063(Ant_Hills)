#include<bits/stdc++.h>
using namespace std;

#define print(a) for(auto x:a)cout<<x<<' ';cout<<'\n';
#define debug(x) cout<<#x<<" "<<x<<endl
#define all(a) (a).begin(),(a).end()
#define sz(a) (int)(a.size())
#define int   long long int
#define endl '\n'
#define ar array

const int M = 1e9 + 7;
const int N = 2e6 + 10;

int in[N], low[N], cut[N], vis[N], timer;

vector<int>g[N];

void dfs (int u, int p = -1) {
   in[u] = low[u] = timer++;
   vis[u] = 1; int child = 0;
   for (auto v : g[u]) {
      if (v == p) continue;
      if (vis[v]) {
         low[u] = min (low[u], in[v]);
      } else {
         child++;
         dfs (v, u);
         low[u] = min (low[u], low[v]);
         if (low[v] >= in[u] && p != -1) {
            cut[u] = 1;
         }
      }
   }
   if (child > 1 && p == -1) {
      cut[u] = 1;
   }
}


void solve() {

   int n, m;
   cin >> n >> m;
   for (int i = 0; i <= n; i++) {
      in[i] = low[i] = vis[i] = cut[i] = 0;
      g[i].clear(); timer = 0;
   }

   for (int i = 0; i < m; i++) {
      int u, v ;
      cin >> u >> v;
      g[u].push_back (v);
      g[v].push_back (u);
   }
   for (int i = 1; i <= n; i++) {
      if (!vis[i]) dfs (i);
   }
   int ans = 0;
   for (int i = 1; i <= n; i++) ans += cut[i];

   cout << ans << endl;

}

signed main() {
   ios_base::sync_with_stdio (0);
   cin.tie (0);

   int t = 1;  cin >> t;

   for (int tc = 1; tc <= t; tc++) {
      cout << "Case " << tc << ": ";
      solve();
   }

   return 0;
}
