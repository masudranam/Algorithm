#include<bits/stdc++.h>
using namespace std;
#define print(a) for(auto x:a)cout<<x<<" "
#define debug(x) cout<<#x<<" "<<x<<endl
#define all(a) (a).begin(),(a).end()
#define sz(a) (int)(a.size())
#define int   long long int
#define endl '\n'
#define ar array
 
const int M=1e9+7;
const int N=1e6+10;

string s;
const int p = 397;
int pw[N],hF[N],hR[N],len,n;

void Calc(){
    len=sz(s);
    pw[0]=1; hF[0] = hR[len+1] = 0;
    for(int i=1;i<=len;i++){pw[i]=(pw[i-1]*p)%M;}
    for(int i=0; i<len; i++){
        hF[i+1] = (hF[i] * p + (s[i] - 'a' + 1) ) % M;
        hR[len-i] = (hR[len-i+1] * p + (s[len-i-1] - 'a' + 1)) % M;
    }
}

int hashF(int l,int r){
   int val = hF[r] - (hF[l - 1] * pw[r - l + 1]) % M;
    if(val<0)val+=M;
    return val;
}

int hashR(int l,int r){
    int val = hR[l] - (hR[r + 1] * pw[r - l + 1]) % M;
    if(val<0)val+=M;
    return val;
}

bool ispalin(int l,int r){
    if(r<l)return false;
    return (hashF(l, r) == hashR(l, r));
}


//Double hashing

const int M = 1e9 + 7;
const int M1=M+2;
const int N = 1e6 + 10;

string s, t;
int k;
const int p1 = 397, p2 = 313;
int pw1[N], pw2[N], hF1[N], hF2[N], hR1[N], hR2[N], len, n;

void Calc() {
   len = sz (s);
   pw1[0] = 1; hF1[0] = hR1[len + 1] = 0;
   pw2[0] = 1; hF2[0] = hR2[len + 1] = 0;

   for (int i = 1; i <= len; i++) {
      pw1[i] = (pw1[i - 1] * p1) % M;
      pw2[i] = (pw2[i - 1] * p1) % M1;
   }
   for (int i = 0; i < len; i++) {
      hF1[i + 1] = (hF1[i] * p1 + (s[i])) % M;
      hF2[i + 1] = (hF2[i] * p1 + s[i]) % M1;
      hR1[len - i] = (hR1[len - i + 1] * p1 + (s[len - i - 1])) % M;
      hR2[len - i] = (hR2[len - i + 1] * p1 + (s[len - i - 1])) % M1;
   }
}


ar<int, 2> hashF (int l, int r) {
   int val1 = hF1[r] - (hF1[l - 1] * pw1[r - l + 1]) % M;
   int val2 = hF2[r] - (hF2[l - 1] * pw2[r - l + 1]) % M1;
   if (val1 < 0) val1 += M;
   if (val2 < 0) val2 += M1;
   return {val1, val2};
}

ar<int, 2> hashR (int l, int r) {
   int val1 = hR1[l] - (hR1[r + 1] * pw1[r - l + 1]) % M;
   int val2 = hR2[l] - (hR2[r + 1] * pw2[r - l + 1]) % M1;
   if (val1 < 0) val1 += M;
   if (val2 < 0) val2 += M1;
   return {val1, val2};
}



signed main(){
ios_base::sync_with_stdio(false);cin.tie(NULL);
//freopen("input.txt","r",stdin);
//freopen("output.txt","w",stdout);
 
int t=1;   //cin>>t;
 
while(t--)solve();
return 0;}
